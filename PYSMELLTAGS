{'CLASSES': {'ladder_viewer.players.models.Player': {'bases': ['django.db.models.Model'],
                                                     'constructor': [],
                                                     'docstring': '',
                                                     'methods': [],
                                                     'properties': ['name',
                                                                    'league',
                                                                    'race',
                                                                    'charcode',
                                                                    'bnet_id']},
             'ladder_viewer.players.tests.SimpleTest': {'bases': ['django.test.TestCase'],
                                                        'constructor': [],
                                                        'docstring': '',
                                                        'methods': [('test_basic_addition',
                                                                     [],
                                                                     '\n        Tests that 1 + 1 always equals 2.\n        ')],
                                                        'properties': []},
             'sc2ranks.sc2ranks.NoSuchCharacterException': {'bases': ['Exception'],
                                                            'constructor': [],
                                                            'docstring': '',
                                                            'methods': [],
                                                            'properties': []},
             'sc2ranks.sc2ranks.ParameterException': {'bases': ['Exception'],
                                                      'constructor': [],
                                                      'docstring': '',
                                                      'methods': [],
                                                      'properties': []},
             'sc2ranks.sc2ranks.Sc2Ranks': {'bases': [],
                                            'constructor': ['app_key'],
                                            'docstring': '',
                                            'methods': [('api_fetch',
                                                         ['path', "params=''"],
                                                         "\n        Fetch some JSON from the API\n\n        >>> client = Sc2Ranks('github.com/phleet/sc2ranks')\n        >>> client.api_fetch('search/exact/us/phleet')\n        {u'total': 1, u'characters': [{u'bnet_id': 299464, u'name': u'phleet'}]}\n        "),
                                                        ('validate', ['data', 'exception'], ''),
                                                        ('search_for_character',
                                                         ['region',
                                                          'name',
                                                          "search_type='exact'"],
                                                         "\n        Search for a character by screen name\n\n        >>> client = Sc2Ranks('github.com/phleet/sc2ranks')\n        >>> client.search_for_character(region='us',name='phleet')\n        <Sc2RanksResponse(total=1, characters=[{u'bnet_id': 299464, u'name': u'phleet'}])>\n        >>> client.search_for_character(region='us',name='PleaseNobodyTakeThisUsername')\n        Traceback (most recent call last):\n            ...\n        NoSuchCharacterException: Name: PleaseNobodyTakeThisUsername, region: us\n        "),
                                                        ('search_for_profile',
                                                         ['region',
                                                          'name',
                                                          "search_type='1t'",
                                                          "search_subtype='division'",
                                                          "value='Division'"],
                                                         "\n        Search for a character profile\n\n        >>> client = Sc2Ranks('github.com/phleet/sc2ranks')\n        >>> client.search_for_profile(name='phleet', region='us')\n        ... #doctest: +NORMALIZE_WHITESPACE, +ELLIPSIS\n        [<Sc2RanksResponse(bnet_id=299464, \n            name=phleet, \n            achievement_points=..., \n            character_code=..., \n            region=us, \n            team={u'division_id': ..., \n                  u'division_name': ...,\n                  u'wins': ...,\n                  u'losses': ...,\n                  u'points': ...,\n                  u'id': ...}, \n            id=...)>]       \n        >>> client.search_for_profile(name='PleaseNobodyTakeThisUsername', region='us')\n        Traceback (most recent call last):\n            ...\n        NoSuchCharacterException: Name: PleaseNobodyTakeThisUsername, region: us\n        "),
                                                        ('fetch_base_character',
                                                         ['region', 'name', 'code'],
                                                         "\n        Minimum amount of character data, just gives achievement points, character code and battle.net id info.\n\n        >>> client = Sc2Ranks('github.com/phleet/sc2ranks')\n        >>> client.fetch_base_character(region='eu',name='canute',code='501') \n        ... #doctest: +NORMALIZE_WHITESPACE, +ELLIPSIS\n        <Sc2RanksResponse(bnet_id=832842, name=Canute, \n            achievement_points=..., \n            region=eu, \n            updated_at=...,\n            portrait=<Sc2RanksResponse(...)>, \n            character_code=501, id=513263)>    \n        "),
                                                        ('fetch_base_character_teams',
                                                         ['region', 'name', 'code'],
                                                         "\n        Base character data plus team items\n\n        >>> client = Sc2Ranks('github.com/phleet/sc2ranks')\n        >>> client.fetch_base_character_teams(region='eu',name='canute',code='501') \n        ... #doctest: +NORMALIZE_WHITESPACE, +ELLIPSIS\n        <Sc2RanksResponse(bnet_id=832842, name=Canute, \n            achievement_points=...,\n            region=eu, \n            updated_at=...,\n            teams={'2v2': <Sc2RanksResponse(division=..., \n                            region_rank=...,\n                            ratio=...,\n                            league=...,\n                            fav_race=...,\n                            wins=...,\n                            losses=...,\n                            points=..., \n                            updated_at=..., \n                            is_random=...,\n                            world_rank=...,\n                            division_rank=..., \n                            bracket=...)>, \n                '4v4': <Sc2RanksResponse(...)>, \n                '3v3': <Sc2RanksResponse(...)>, \n                '1v1': <Sc2RanksResponse(...)>},\n            portrait=<Sc2RanksResponse(column=..., icon_id=..., row=...)>,\n            character_code=501, \n            id=513263)>\n        "),
                                                        ('fetch_character_teams',
                                                         ['region',
                                                          'name',
                                                          'code',
                                                          'bracket',
                                                          'is_random=False'],
                                                         "\n        Gets character info and extended team info\n\n        >>> client = Sc2Ranks('github.com/phleet/sc2ranks')\n        >>> client.fetch_character_teams(region='eu',name='canute',code='501',bracket='3v3')\n        ... #doctest: +NORMALIZE_WHITESPACE, +ELLIPSIS\n        <Sc2RanksResponse(bnet_id=832842, name=Canute, \n            achievement_points=...,\n            region=eu, \n            updated_at=..., \n            teams={'3v3': <Sc2RanksResponse(division_id=..., \n                            division=...,\n                            region_rank=..., \n                            league=..., \n                            updated_at=...,\n                            world_rank=..., \n                            members=[<Sc2RanksResponse(id=...,\n                                        fav_race=..., \n                                        bnet_id=..., \n                                        name=..., \n                                        character_code=...)>,\n                                    <Sc2RanksResponse(...)>], \n                            division_rank=..., \n                            id=...,\n                            points=..., \n                            fav_race=..., \n                            ratio=..., \n                            wins=..., \n                            losses=...,\n                            is_random=..., \n                            bracket=...)>}, \n            character_code=501, \n            id=513263)>   \n        "),
                                                        ('fetch_mass_base_characters',
                                                         ['characters'],
                                                         '\n        Characters format: ((region1, name1, code1), (region2, name2, code2)..)'),
                                                        ('fetch_mass_characters_team',
                                                         ['characters',
                                                          'bracket',
                                                          'is_random=False'],
                                                         "Characters format: ((region1, name1, code1), (region2, name2, code2)..)\n        bracket is like: '1v1'\n        is_random is True/False")],
                                            'properties': ['app_key']},
             'sc2ranks.sc2ranks.Sc2RanksResponse': {'bases': [],
                                                    'constructor': ['d'],
                                                    'docstring': '',
                                                    'methods': [('__repr__', [], '')],
                                                    'properties': []}},
 'CONSTANTS': ['ladder_viewer.settings.DEBUG',
               'ladder_viewer.settings.TEMPLATE_DEBUG',
               'ladder_viewer.settings.ADMINS',
               'ladder_viewer.settings.MANAGERS',
               'ladder_viewer.settings.DATABASE_ENGINE',
               'ladder_viewer.settings.DATABASE_NAME',
               'ladder_viewer.settings.DATABASE_USER',
               'ladder_viewer.settings.DATABASE_PASSWORD',
               'ladder_viewer.settings.DATABASE_HOST',
               'ladder_viewer.settings.DATABASE_PORT',
               'ladder_viewer.settings.TIME_ZONE',
               'ladder_viewer.settings.LANGUAGE_CODE',
               'ladder_viewer.settings.SITE_ID',
               'ladder_viewer.settings.USE_I18N',
               'ladder_viewer.settings.USE_L10N',
               'ladder_viewer.settings.MEDIA_ROOT',
               'ladder_viewer.settings.MEDIA_URL',
               'ladder_viewer.settings.ADMIN_MEDIA_PREFIX',
               'ladder_viewer.settings.SECRET_KEY',
               'ladder_viewer.settings.TEMPLATE_LOADERS',
               'ladder_viewer.settings.MIDDLEWARE_CLASSES',
               'ladder_viewer.settings.ROOT_URLCONF',
               'ladder_viewer.settings.TEMPLATE_DIRS',
               'ladder_viewer.settings.INSTALLED_APPS',
               'ladder_viewer.urls.urlpatterns',
               'sc2ranks.sc2ranks.valid_regions',
               'sc2ranks.sc2ranks.max_chars',
               'ladder_viewer.players.models.LEAGUE_CHOICES',
               'ladder_viewer.players.models.RACE_CHOICES',
               'ladder_viewer.players.tests.__test__'],
 'FUNCTIONS': [('sc2ranks.sc2ranks.character_url',
                ['region', 'name', 'bnet_id=None', 'code=None'],
                'Returns the url to a character on sc2ranks.com'),
               ('sc2ranks.sc2ranks.fetch_json', ['url', 'params=None'], '')],
 'HIERARCHY': ['ladder_viewer',
               'ladder_viewer.manage',
               'ladder_viewer.settings',
               'ladder_viewer.urls',
               'sc2ranks',
               'sc2ranks.sc2ranks',
               'ladder_viewer.players',
               'ladder_viewer.players.models',
               'ladder_viewer.players.tests',
               'ladder_viewer.players.views'],
 'POINTERS': {'ladder_viewer.manage.execute_manager': 'django.core.management.execute_manager',
              'ladder_viewer.manage.settings': 'ladder_viewer.settings',
              'ladder_viewer.manage.sys': 'sys',
              'ladder_viewer.players.models.models': 'django.db.models',
              'ladder_viewer.players.tests.TestCase': 'django.test.TestCase',
              'ladder_viewer.settings.os.path': 'os.path',
              'ladder_viewer.urls.*': 'django.views.static.*',
              'ladder_viewer.urls.admin': 'django.contrib.admin',
              'ladder_viewer.urls.settings': 'django.conf.settings',
              'sc2ranks.sc2ranks.doctest': 'doctest',
              'sc2ranks.sc2ranks.json': 'json',
              'sc2ranks.sc2ranks.urllib': 'urllib'}}
